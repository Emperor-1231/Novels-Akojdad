# إعدادات Gradle على مستوى المشروع.

# مستخدمي IDE (مثل Android Studio):
# إعدادات Gradle التي يتم تكوينها من خلال الـ IDE *ستتجاوز*
# أي إعدادات محددة في هذا الملف.

# لمزيد من التفاصيل حول كيفية تكوين بيئة البناء، قم بزيارة
# http://www.gradle.org/docs/current/userguide/build_environment.html

# يحدد وسيطات JVM المستخدمة لعملية daemon.
# هذا الإعداد مفيد بشكل خاص لضبط إعدادات الذاكرة.

# القيمة الافتراضية: -Xmx512m -XX:MaxMetaspaceSize=256m

org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m

# عند التكوين، سيعمل Gradle في وضع التوازي التجريبي.
# يجب استخدام هذا الخيار فقط مع المشاريع المنفصلة. لمزيد من التفاصيل، قم بزيارة
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# بنية حزمة AndroidX لجعل الحزم المرتبطة بنظام Android أكثر وضوحًا
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# تحويل المكتبات الخارجية تلقائيًا لاستخدام AndroidX
android.enableJetifier=true

# استخدم هذه الخاصية لتحديد الهندسة المعمارية التي تريد البناء لها.
# يمكنك أيضًا تجاوزها من سطر الأوامر باستخدام
# ./gradlew <task> -PreactNativeArchitectures=x86_64
reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64
# استخدم هذه الخاصية لتمكين دعم الهندسة المعمارية الجديدة.
# سيسمح لك ذلك باستخدام TurboModules وعرض Fabric في تطبيقك.
newArchEnabled=false

# استخدم هذه الخاصية لتمكين أو تعطيل محرك JavaScript Hermes.
# إذا تم تعيينها إلى false، سيتم استخدام JSC بدلاً من ذلك.
hermesEnabled=true

# تمكين دعم GIF في صور React Native (~200 بايت زيادة)
expo.gif.enabled=false
# تمكين دعم webp في صور React Native (~85 كيلوبايت زيادة)
expo.webp.enabled=false
# تمكين دعم webp المتحرك (~3.4 ميجابايت زيادة)
# معطل بشكل افتراضي لأن iOS لا يدعم webp المتحرك
expo.webp.animated=false